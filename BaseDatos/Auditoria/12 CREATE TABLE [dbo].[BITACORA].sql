BEGIN

DECLARE @ListTable TABLE (
	ID INT,
	ESQUEMA NVARCHAR(MAX),
	TABLA NVARCHAR(MAX)
)
DECLARE @Pointer INT = (SELECT count(*) FROM @ListTable);
DECLARE @ID INT, @ESQUEMA NVARCHAR(MAX), @TABLA NVARCHAR(MAX);
DECLARE @PRIMARYKEY NVARCHAR(MAX);


IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BITACORA]') AND type in (N'U'))
BEGIN
	CREATE TABLE [dbo].[BITACORA](
		[Id] [decimal](18, 0) IDENTITY(1,1) NOT NULL,	
		[Tabla] [nvarchar](75) NOT NULL,		
		[Metada] [nvarchar](MAX) NOT NULL,	
		[Accion] [nvarchar](20) NOT NULL,	
		[FechaRegistro] [datetime] NOT NULL
	 CONSTRAINT [PK_BITACORA] PRIMARY KEY CLUSTERED	
	(
		[Id] DESC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 80) ON [PRIMARY],
	) ON [PRIMARY]

	ALTER TABLE [dbo].[BITACORA] ADD CONSTRAINT [DF_BITACORA_FechaRegistro]  DEFAULT ((CURRENT_TIMESTAMP)) FOR [FechaRegistro]

	PRINT N'CREATE TABLE [dbo].[BITACORA]'

	BEGIN TRY

		BEGIN TRANSACTION APLICANDO_AUDITORIA

			INSERT INTO @ListTable
			SELECT 
				OBJECT_ID AS [ID],
				SCHEMA_NAME(schema_id) AS [schema],
				name AS [table]
			FROM sys.tables
			WHERE name <> 'BITACORA'
			AND OBJECT_ID <> '1501248403'
			ORDER BY [schema], [table] ASC

			SET @PointeR = (SELECT count(*) FROM @ListTable);

			WHILE  @Pointer > 0
			BEGIN
				SELECT TOP 1 @ID = ID, @ESQUEMA = ESQUEMA, @TABLA = TABLA FROM @ListTable ORDER BY ESQUEMA, TABLA ASC

				--AGREGAR TRIGGER DE AUDITORIA
				
				SELECT @PRIMARYKEY = COLUMN_NAME
				FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE
				WHERE OBJECTPROPERTY(OBJECT_ID(CONSTRAINT_SCHEMA + '.' + QUOTENAME(CONSTRAINT_NAME)), 'IsPrimaryKey') = 1
				AND TABLE_NAME = @TABLA AND TABLE_SCHEMA = @ESQUEMA;

				DECLARE @SQLTRIGGER NVARCHAR(MAX) = 'CREATE TRIGGER ['+@ESQUEMA+'].[BIT_UPDATE_'+@TABLA+'] ON ['+@ESQUEMA+'].['+@TABLA+']
					AFTER UPDATE AS
					BEGIN
					DECLARE @JSON NVARCHAR(MAX);
					SET @JSON = (SELECT * FROM Inserted FOR JSON PATH, ROOT(''data''));
					INSERT INTO ['+@ESQUEMA+'].[Bitacora] ([Tabla], [Metada], [Accion]) VALUES ('''+@TABLA+''', (SELECT VALUE FROM OPENJSON(@JSON,''$.data'')), ''ACTUALIZAR'');
					END;';
				EXEC(@SQLTRIGGER);

				SET @SQLTRIGGER = 'CREATE TRIGGER ['+@ESQUEMA+'].[BIT_INSERT_'+@TABLA+'] ON ['+@ESQUEMA+'].['+@TABLA+']
					AFTER INSERT AS
					BEGIN
					DECLARE @JSON NVARCHAR(MAX);
					SET @JSON = (SELECT * FROM Inserted FOR JSON PATH, ROOT(''data''));
					INSERT INTO ['+@ESQUEMA+'].[Bitacora] ([Tabla], [Metada], [Accion]) VALUES ('''+@TABLA+''', (SELECT VALUE FROM OPENJSON(@JSON,''$.data'')), ''INSERTAR'');
					END;';
				EXEC(@SQLTRIGGER);

				SET @SQLTRIGGER = 'CREATE TRIGGER ['+@ESQUEMA+'].[BIT_DELETE_'+@TABLA+'] ON ['+@ESQUEMA+'].['+@TABLA+']
					AFTER DELETE AS
					BEGIN
					DECLARE @JSON NVARCHAR(MAX);
					SET @JSON = (SELECT * FROM deleted FOR JSON PATH, ROOT(''data''));
					INSERT INTO ['+@ESQUEMA+'].[Bitacora] ([Tabla], [Metada], [Accion]) VALUES ('''+@TABLA+''', (SELECT VALUE FROM OPENJSON(@JSON,''$.data'')), ''ELIMINAR'');
					END;';
				EXEC(@SQLTRIGGER);

				DELETE FROM @ListTable WHERE @ID = ID
				SET @Pointer = (SELECT count(*) FROM @ListTable);
			END

		COMMIT TRANSACTION APLICANDO_AUDITORIA
	END TRY
	BEGIN CATCH
		PRINT 'Error al aplicar auditoria ['+@ESQUEMA+'].['+@TABLA+']: '+Error_Message();
		ROLLBACK TRANSACTION APLICANDO_AUDITORIA
	END CATCH
END
ELSE
BEGIN
	DROP TABLE [dbo].[BITACORA];


	BEGIN TRY

		BEGIN TRANSACTION APLICANDO_AUDITORIA

			INSERT INTO @ListTable
			SELECT 
				OBJECT_ID AS [ID],
				SCHEMA_NAME(schema_id) AS [schema],
				name AS [table]
			FROM sys.tables
			ORDER BY [schema], [table] ASC

			SET @Pointer = (SELECT count(*) FROM @ListTable);

			WHILE  @Pointer > 0
			BEGIN
				SELECT TOP 1 @ID = ID, @ESQUEMA = ESQUEMA, @TABLA = TABLA FROM @ListTable ORDER BY ESQUEMA, TABLA ASC

				--ELIMINAR TRIGGER DE AUDITORIA
				SET @SQLTRIGGER = 'DROP TRIGGER IF EXISTS ['+@ESQUEMA+'].[BIT_UPDATE_'+@TABLA+'];';
				EXEC(@SQLTRIGGER);

				SET @SQLTRIGGER = 'DROP TRIGGER IF EXISTS ['+@ESQUEMA+'].[BIT_INSERT_'+@TABLA+'];';
				EXEC(@SQLTRIGGER);

				SET @SQLTRIGGER = 'DROP TRIGGER IF EXISTS ['+@ESQUEMA+'].[BIT_DELETE_'+@TABLA+'];';
				EXEC(@SQLTRIGGER);

				DELETE FROM @ListTable WHERE @ID = ID
				SET @Pointer = @Pointer - 1
			END

		COMMIT TRANSACTION APLICANDO_AUDITORIA
	END TRY
	BEGIN CATCH
		PRINT 'Error al eliminar auditoria: ['+@ESQUEMA+'].['+@TABLA+']: '+Error_Message();
		ROLLBACK TRANSACTION APLICANDO_AUDITORIA
	END CATCH

	PRINT N'DROP TABLE [dbo].[BITACORA]'
END

END